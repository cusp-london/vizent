{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using Mapbox for background map tiles for a bus route\n",
    "\n",
    "(Requires Mapbox API token)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext dotenv\n",
    "%dotenv\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n",
    "from vizent.vizent_plot import create_plot, add_lines\n",
    "from scipy.stats import sem\n",
    "import cartopy.io.img_tiles as cimgt\n",
    "import cartopy.crs as ccrs\n",
    "import matplotlib.image as mpimg\n",
    "import matplotlib.text as text\n",
    "import warnings\n",
    "\n",
    "# Filter warnings for gallery image only\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "edge_estimates = pd.read_csv('sample-data/bus-route-estimates.csv')\n",
    "stops = pd.read_csv('sample-data/bus-route-stops.csv')\n",
    "\n",
    "mapbox_light = cimgt.MapboxTiles(access_token=os.environ['MAPBOX_API_TOKEN'], \n",
    "                                 map_id='light-v11')\n",
    "\n",
    "transformed = mapbox_light.crs.transform_points(src_crs=ccrs.PlateCarree(), \n",
    "                                                x=stops['lon'], y=stops['lat'])\n",
    "\n",
    "stops['transformed_x'] = [i[0] for i in transformed]\n",
    "stops['transformed_y'] = [i[1] for i in transformed]\n",
    "\n",
    "edges = edge_estimates.merge(stops[['naptanId','transformed_x',\n",
    "                                    'transformed_y']]\\\n",
    "                      .rename({'transformed_x': 'x_start', \n",
    "                               'transformed_y': 'y_start', \n",
    "                               'naptanId': 'start_naptanId'}, axis=1), \n",
    "                                how='inner', on='start_naptanId')\n",
    "\n",
    "edges = edges.merge(stops[['naptanId','transformed_x','transformed_y']].rename(\n",
    "                            {'transformed_x': 'x_end', \n",
    "                            'transformed_y': 'y_end', \n",
    "                            'naptanId': 'end_naptanId'\n",
    "                            }, axis=1), how='inner', on='end_naptanId')\n",
    "\n",
    "vizent_fig = create_plot(use_glyphs=False, \n",
    "                         use_lines=True, \n",
    "                         show_legend=True, \n",
    "                         show_axes=False, \n",
    "                         use_cartopy=True, \n",
    "                         cartopy_projection=mapbox_light.crs,\n",
    "                         extent=[-0.2293, -0.1102, 51.4807, 51.5154], \n",
    "                         scale_x=12.7, \n",
    "                         scale_y=5.7)\n",
    "\n",
    "vizent_fig[0].subplots_adjust(left=0.02, right=0.98, bottom = 0.05, top=0.9, \n",
    "                              wspace = 0.02)\n",
    "\n",
    "vizent_fig[0].dpi = 160\n",
    "\n",
    "vizent_fig[0].suptitle(\"TfL Estimated Bus Speeds and Variability\\n\\\n",
    "Route 9 - Hammersmith - Aldwych\")\n",
    "\n",
    "vizent_fig[1].add_image(mapbox_light, 14, zorder=0)\n",
    "vizent_fig[1].plot(stops['transformed_x'], stops['transformed_y'],\n",
    "                   lw=0, marker='o', color='k', markersize=1.5)\n",
    "\n",
    "viz_df = edges.groupby(['start_naptanId', 'end_naptanId', \n",
    "                        'distance', 'x_start', 'x_end', \n",
    "                        'y_start', 'y_end'])['estimate_seconds']\\\n",
    "                        .agg([np.mean, sem]).reset_index()\n",
    "\n",
    "viz_df['kmh'] = 3.6 * (viz_df['distance'] / viz_df['mean'])\n",
    "\n",
    "add_lines(vizent_fig,\n",
    "          x_starts=viz_df['x_start'], \n",
    "          x_ends=viz_df['x_end'], \n",
    "          y_starts=viz_df['y_start'], \n",
    "          y_ends=viz_df['y_end'], \n",
    "          color_values=viz_df['kmh'],\n",
    "          freq_values=viz_df['sem'], \n",
    "          width_values=[2 for l in range(viz_df.shape[0])], \n",
    "          colormap='Purples', \n",
    "          color_min=0,\n",
    "          color_max=30,\n",
    "          label_fontsize=7, \n",
    "          legend_title='Legend', \n",
    "          color_label='Speed (km/h)', \n",
    "          frequency_label='Variability', \n",
    "          length_type='units',\n",
    "          style='set_length',\n",
    "          striped_length=150,\n",
    "          scale_dp=0,\n",
    "          freq_n=3)\n",
    "\n",
    "sem_scale = []\n",
    "for child in vizent_fig[0].axes[0].get_children():\n",
    "    if type(child)==text.Annotation:\n",
    "        try:\n",
    "            number = int(child.get_text())\n",
    "            sem_scale.append(number)\n",
    "        except:\n",
    "            pass\n",
    "for child in vizent_fig[0].axes[0].get_children():\n",
    "    if type(child)==text.Annotation:\n",
    "        try: \n",
    "            number = int(child.get_text())\n",
    "            if number == min(sem_scale):\n",
    "                child.set_text('Low')\n",
    "            elif number == max(sem_scale):\n",
    "                child.set_text('High')\n",
    "            else:\n",
    "                child.set_text('Medium')\n",
    "        except:\n",
    "            pass\n",
    "\n",
    "# Add mapbox attribution\n",
    "im = mpimg.imread('_static/mapbox-logo-black.png')\n",
    "imax = vizent_fig[1].inset_axes([0.0, 0.01, 0.1, 0.02])\n",
    "imax.imshow(im)\n",
    "imax.axis('off')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "© [Mapbox](https://www.mapbox.com/about/maps/) © [OpenStreetMap](http://www.openstreetmap.org/copyright) [Improve this map](https://www.mapbox.com/map-feedback/)\n",
    "\n",
    "Powered by TfL Open Data. Contains OS data © Crown copyright and database rights 2016 and Geomni UK Map data © and database rights [2019]  \n",
    "\n",
    "[Link to image](_images/gallery-bus-routes_1_1.png)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "vizent-env",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
